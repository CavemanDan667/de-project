name: Security Checks and Testing

on: 
  push:
    branches-ignore:
      - main

jobs:
  runner-job: 
    name: Security Checks and Testing
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: "mock_tote_db"
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
            python-version: '3.11.1'
      - name: Install dependencies
        run: make requirements
      - name: Install pg8000
        run: pip install pg8000
      - name: Connect to PostgreSQL
        run: python mock_database/seed_github.py
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
      - name: Make Envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_USER: mock_tote_db
          envkey_PASSWORD: postgres
          envkey_HOST: localhost
          envkey_PORT: 5432
          envkey_DATABASE: mock_tote_db
      - name: Run Flake
        run: make run-flake
      - name: Run Security Checks
        run: make security-test
      - name: Check Coverage
        run: make check-coverage
      - name: Unit Tests
        run: make unit-test

  deploy-terraform:
      name: Deploy Terraform
      runs-on: ubuntu-latest
      needs: runner-job
      steps:
        - name: Checkout Repo
          uses: actions/checkout@4
        - name: Configure AWS CLI
          uses: aws-actions/configure-aws-credentials@4
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: eu-west-2
        - name: Setup Terraform
          uses: hashicorp/setup-terraform@v2
        - name: Terraform Init
          working-directory: terraform
          run: terraform init
        - name: Terraform Plan
          working-directory: terraform
          run: terraform plan
          env:
              TF_VAR_USER: ${{ secrets.TOTESYS_USER }}
              TF_VAR_HOST: ${{ secrets.TOTESYS_HOST }}
              TF_VAR_DATABASE: ${{ secrets.TOTESYS_DATABASE }}
              TF_VAR_PASSWORD: ${{ secrets.TOTESYS_PASSWORD }}
              TF_VAR_PORT: ${{ secrets.TOTESYS_PORT }}

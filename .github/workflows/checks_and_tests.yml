name: Security Checks and Testing

on: 
  push:
    branches:
      - '*'


jobs:
  test-and-security:
    name: test-and-security
    runs-on: ubuntu-latest
    steps:
        - name: Checkout Repo
          uses: actions/checkout@v4
        - name: Setup Python
          uses: actions/setup-python@v4
          with:
            python-version: '3.11.1'
        - name: Make Envfile
          uses: SpicyPizza/create-envfile@v2.0
          with:
            envkey_USER: ${{ secrets.DB_USER }}
            envkey_PASSWORD: ${{ secrets.DB_PASS }}
            envkey_HOST: postgres
            envkey_PORT: ${{ secrets.DB_PORT }}
            envkey_DATABASE: ${{ secrets.DB_DATABASE }}
        - name: Install Dependencies
          run: make requirements
        - name: Run Flake
          run: make run-flake
        - name: Run Security Checks
          run: make security-test
        - name: Connect Database
          # uses: harmon758/postgresql-action@v1
          # with:
          #   postgresql version: '11'
          run: psql -f ./mock_database/seed.sql
        # - name: Connect Empty Database
        #   uses: harmon758/postgresql-action@v1
        #   with:
        #     postgresql version: '11'
          run: psql -f ./mock_database/seed_empty.sql
        - name: Check Coverage
          run: make check-coverage
  run-unit-tests: 
    name: run-unit-tests
    runs-on: ubuntu-latest
    needs: test-and-security
    steps: 
        - name: Checkout Repo
          uses: actions/checkout@v4
        - name: Setup Python
          uses: actions/setup-python@v4
          with:
            python-version: '3.11.1'
        - name: Install Dependencies
          run: make requirements
        - name: Unit Tests
          run: make unit-test

  



  # In a separate .yml:
  # deploy-terraform:
  #   name: deploy-terraform
  #   runs-on: ubuntu-latest
  #   needs: run-unit-tests
  #   steps: 
  #     - name: Checkout Repo
  #       uses: actions/checkout@4
  #     - name: Configure AWS CLI
  #       uses: aws-actions/configure-aws-credentials@4
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: eu-west-2
  #     - name: Setup Terraform
  #       uses: hashicorp/setup-terraform@v2
  #     - name: Terraform Init
  #       working-directory: terraform
  #       run: terraform init
  #     - name: Terraform Plan
  #       working-directory: terraform
  #       run: terraform plan
  #     - name: Terraform Apply
  #       working-directory: terraform
  #       run: terraform apply -auto-approve

    
